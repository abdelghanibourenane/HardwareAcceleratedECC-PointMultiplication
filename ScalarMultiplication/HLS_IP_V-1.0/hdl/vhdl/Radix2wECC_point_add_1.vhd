-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Radix2wECC_point_add_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x1_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
    y1_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
    x2_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
    y2_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (165 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (165 downto 0);
    grp_bf_inv_fu_529_p_din1 : OUT STD_LOGIC_VECTOR (165 downto 0);
    grp_bf_inv_fu_529_p_dout0 : IN STD_LOGIC_VECTOR (165 downto 0);
    grp_bf_inv_fu_529_p_start : OUT STD_LOGIC;
    grp_bf_inv_fu_529_p_ready : IN STD_LOGIC;
    grp_bf_inv_fu_529_p_done : IN STD_LOGIC;
    grp_bf_inv_fu_529_p_idle : IN STD_LOGIC;
    grp_bf_mult_1_fu_539_p_din1 : OUT STD_LOGIC_VECTOR (165 downto 0);
    grp_bf_mult_1_fu_539_p_din2 : OUT STD_LOGIC_VECTOR (162 downto 0);
    grp_bf_mult_1_fu_539_p_dout0 : IN STD_LOGIC_VECTOR (165 downto 0);
    grp_bf_mult_1_fu_539_p_start : OUT STD_LOGIC;
    grp_bf_mult_1_fu_539_p_ready : IN STD_LOGIC;
    grp_bf_mult_1_fu_539_p_done : IN STD_LOGIC;
    grp_bf_mult_1_fu_539_p_idle : IN STD_LOGIC;
    grp_bf_mult_2_fu_534_p_din1 : OUT STD_LOGIC_VECTOR (165 downto 0);
    grp_bf_mult_2_fu_534_p_dout0 : IN STD_LOGIC_VECTOR (165 downto 0);
    grp_bf_mult_2_fu_534_p_start : OUT STD_LOGIC;
    grp_bf_mult_2_fu_534_p_ready : IN STD_LOGIC;
    grp_bf_mult_2_fu_534_p_done : IN STD_LOGIC;
    grp_bf_mult_2_fu_534_p_idle : IN STD_LOGIC );
end;


architecture behav of Radix2wECC_point_add_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (21 downto 0) := "0000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (21 downto 0) := "0000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (21 downto 0) := "0000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (21 downto 0) := "0000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (21 downto 0) := "0000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (21 downto 0) := "0000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (21 downto 0) := "0001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (21 downto 0) := "0010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (21 downto 0) := "0100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (21 downto 0) := "1000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv166_lc_1 : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv166_lc_2 : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_192 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal reg_197 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal reg_205 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_bf_add_1_fu_150_ap_return : STD_LOGIC_VECTOR (165 downto 0);
    signal reg_211 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal trunc_ln99_fu_218_p1 : STD_LOGIC_VECTOR (162 downto 0);
    signal trunc_ln99_reg_384 : STD_LOGIC_VECTOR (162 downto 0);
    signal or_ln100_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln100_reg_389 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln101_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln101_reg_393 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_397 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln120_fu_266_p1 : STD_LOGIC_VECTOR (162 downto 0);
    signal trunc_ln120_reg_407 : STD_LOGIC_VECTOR (162 downto 0);
    signal d_V_3_fu_270_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal d_V_3_reg_412 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_bf_mult_fu_160_ap_return : STD_LOGIC_VECTOR (165 downto 0);
    signal a_V_reg_418 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln108_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_423 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal select_ln108_fu_297_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal call_ret3_reg_435 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal lambda_V_2_fu_308_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal lambda_V_2_reg_440 : STD_LOGIC_VECTOR (165 downto 0);
    signal empty_fu_317_p1 : STD_LOGIC_VECTOR (162 downto 0);
    signal empty_reg_449 : STD_LOGIC_VECTOR (162 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_start : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_done : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_idle : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_ready : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_a_V_3_out : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_a_V_3_out_ap_vld : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_start : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_done : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_idle : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_ready : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_p_Val2_3_out : STD_LOGIC_VECTOR (162 downto 0);
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_p_Val2_3_out_ap_vld : STD_LOGIC;
    signal grp_bf_inv_fu_132_ap_done : STD_LOGIC;
    signal grp_bf_inv_fu_132_ap_ready : STD_LOGIC;
    signal grp_bf_inv_fu_132_x_V_read : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_bf_mult_1_fu_137_ap_done : STD_LOGIC;
    signal grp_bf_mult_1_fu_137_ap_ready : STD_LOGIC;
    signal grp_bf_mult_1_fu_137_z_V_read : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_bf_mult_1_fu_137_y_V_read : STD_LOGIC_VECTOR (162 downto 0);
    signal grp_bf_mult_2_fu_144_ap_done : STD_LOGIC;
    signal grp_bf_mult_2_fu_144_ap_ready : STD_LOGIC;
    signal grp_bf_mult_2_fu_144_x_V_read : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_bf_add_1_fu_150_ap_start : STD_LOGIC;
    signal grp_bf_add_1_fu_150_ap_done : STD_LOGIC;
    signal grp_bf_add_1_fu_150_ap_idle : STD_LOGIC;
    signal grp_bf_add_1_fu_150_ap_ready : STD_LOGIC;
    signal grp_bf_add_1_fu_150_z_V_read : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_bf_add_1_fu_150_y_V_read : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_bf_mult_fu_160_ap_start : STD_LOGIC;
    signal grp_bf_mult_fu_160_ap_done : STD_LOGIC;
    signal grp_bf_mult_fu_160_ap_idle : STD_LOGIC;
    signal grp_bf_mult_fu_160_ap_ready : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_start : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_done : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_idle : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_ready : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_p_Val2_1_out : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_p_Val2_1_out_ap_vld : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_start : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_done : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_idle : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_ready : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_p_Val2_2_out : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_p_Val2_2_out_ap_vld : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_start : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_done : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_idle : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_ready : STD_LOGIC;
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_p_Val2_4_out : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_p_Val2_4_out_ap_vld : STD_LOGIC;
    signal ap_phi_mux_x1_3_phi_fu_85_p10 : STD_LOGIC_VECTOR (165 downto 0);
    signal x1_3_reg_82 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_predicate_op67_call_state12 : BOOLEAN;
    signal ap_block_state12_on_subcall_done : BOOLEAN;
    signal ap_phi_mux_y1_2_phi_fu_101_p10 : STD_LOGIC_VECTOR (165 downto 0);
    signal y1_2_reg_97 : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_start_reg : STD_LOGIC := '0';
    signal p_Val2_3_loc_fu_38 : STD_LOGIC_VECTOR (162 downto 0);
    signal grp_bf_inv_fu_132_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_bf_mult_1_fu_137_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state14_on_subcall_done : BOOLEAN;
    signal grp_bf_mult_2_fu_144_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_bf_add_1_fu_150_ap_start_reg : STD_LOGIC := '0';
    signal grp_bf_mult_fu_160_ap_start_reg : STD_LOGIC := '0';
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal icmp_ln1023_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1023_1_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln101_fu_240_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_condition_574 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component Radix2wECC_point_add_1_Pipeline_VITIS_LOOP_23_13 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x1_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
        x2_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
        a_V_3_out : OUT STD_LOGIC_VECTOR (165 downto 0);
        a_V_3_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wECC_point_add_1_Pipeline_VITIS_LOOP_23_14 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        y1_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
        y2_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
        p_Val2_3_out : OUT STD_LOGIC_VECTOR (162 downto 0);
        p_Val2_3_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wECC_bf_inv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (165 downto 0) );
    end component;


    component Radix2wECC_bf_mult_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        z_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
        y_V_read : IN STD_LOGIC_VECTOR (162 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (165 downto 0) );
    end component;


    component Radix2wECC_bf_mult_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (165 downto 0) );
    end component;


    component Radix2wECC_bf_add_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        z_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
        y_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (165 downto 0) );
    end component;


    component Radix2wECC_bf_mult IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
        y_V_read : IN STD_LOGIC_VECTOR (162 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (165 downto 0) );
    end component;


    component Radix2wECC_point_add_1_Pipeline_VITIS_LOOP_23_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        lambda_V_1 : IN STD_LOGIC_VECTOR (165 downto 0);
        x2_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
        p_Val2_1_out : OUT STD_LOGIC_VECTOR (165 downto 0);
        p_Val2_1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wECC_point_add_1_Pipeline_VITIS_LOOP_23_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        call_ret3 : IN STD_LOGIC_VECTOR (165 downto 0);
        lambda_V_5 : IN STD_LOGIC_VECTOR (165 downto 0);
        p_Val2_2_out : OUT STD_LOGIC_VECTOR (165 downto 0);
        p_Val2_2_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wECC_point_add_1_Pipeline_VITIS_LOOP_23_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        call_ret2 : IN STD_LOGIC_VECTOR (165 downto 0);
        lambda_V_6 : IN STD_LOGIC_VECTOR (165 downto 0);
        p_Val2_4_out : OUT STD_LOGIC_VECTOR (165 downto 0);
        p_Val2_4_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114 : component Radix2wECC_point_add_1_Pipeline_VITIS_LOOP_23_13
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_start,
        ap_done => grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_done,
        ap_idle => grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_idle,
        ap_ready => grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_ready,
        x1_V_read => x1_V_read,
        x2_V_read => x2_V_read,
        a_V_3_out => grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_a_V_3_out,
        a_V_3_out_ap_vld => grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_a_V_3_out_ap_vld);

    grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123 : component Radix2wECC_point_add_1_Pipeline_VITIS_LOOP_23_14
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_start,
        ap_done => grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_done,
        ap_idle => grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_idle,
        ap_ready => grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_ready,
        y1_V_read => y1_V_read,
        y2_V_read => y2_V_read,
        p_Val2_3_out => grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_p_Val2_3_out,
        p_Val2_3_out_ap_vld => grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_p_Val2_3_out_ap_vld);

    grp_bf_add_1_fu_150 : component Radix2wECC_bf_add_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bf_add_1_fu_150_ap_start,
        ap_done => grp_bf_add_1_fu_150_ap_done,
        ap_idle => grp_bf_add_1_fu_150_ap_idle,
        ap_ready => grp_bf_add_1_fu_150_ap_ready,
        z_V_read => grp_bf_add_1_fu_150_z_V_read,
        y_V_read => grp_bf_add_1_fu_150_y_V_read,
        ap_return => grp_bf_add_1_fu_150_ap_return);

    grp_bf_mult_fu_160 : component Radix2wECC_bf_mult
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bf_mult_fu_160_ap_start,
        ap_done => grp_bf_mult_fu_160_ap_done,
        ap_idle => grp_bf_mult_fu_160_ap_idle,
        ap_ready => grp_bf_mult_fu_160_ap_ready,
        x_V_read => reg_211,
        y_V_read => trunc_ln120_reg_407,
        ap_return => grp_bf_mult_fu_160_ap_return);

    grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168 : component Radix2wECC_point_add_1_Pipeline_VITIS_LOOP_23_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_start,
        ap_done => grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_done,
        ap_idle => grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_idle,
        ap_ready => grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_ready,
        lambda_V_1 => reg_197,
        x2_V_read => x2_V_read,
        p_Val2_1_out => grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_p_Val2_1_out,
        p_Val2_1_out_ap_vld => grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_p_Val2_1_out_ap_vld);

    grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176 : component Radix2wECC_point_add_1_Pipeline_VITIS_LOOP_23_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_start,
        ap_done => grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_done,
        ap_idle => grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_idle,
        ap_ready => grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_ready,
        call_ret3 => call_ret3_reg_435,
        lambda_V_5 => lambda_V_2_reg_440,
        p_Val2_2_out => grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_p_Val2_2_out,
        p_Val2_2_out_ap_vld => grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_p_Val2_2_out_ap_vld);

    grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184 : component Radix2wECC_point_add_1_Pipeline_VITIS_LOOP_23_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_start,
        ap_done => grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_done,
        ap_idle => grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_idle,
        ap_ready => grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_ready,
        call_ret2 => reg_205,
        lambda_V_6 => reg_197,
        p_Val2_4_out => grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_p_Val2_4_out,
        p_Val2_4_out_ap_vld => grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_p_Val2_4_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv166_lc_1;
            else
                if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    ap_return_0_preg <= ap_phi_mux_x1_3_phi_fu_85_p10;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv166_lc_1;
            else
                if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    ap_return_1_preg <= ap_phi_mux_y1_2_phi_fu_101_p10;
                end if; 
            end if;
        end if;
    end process;


    grp_bf_add_1_fu_150_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bf_add_1_fu_150_ap_start_reg <= ap_const_logic_0;
            else
                if ((((grp_bf_mult_fu_160_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((grp_bf_add_1_fu_150_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((grp_bf_add_1_fu_150_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((grp_bf_add_1_fu_150_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((grp_bf_mult_2_fu_144_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                    grp_bf_add_1_fu_150_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_bf_add_1_fu_150_ap_ready = ap_const_logic_1)) then 
                    grp_bf_add_1_fu_150_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_bf_inv_fu_132_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bf_inv_fu_132_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln108_fu_293_p2 = ap_const_lv1_0)))) then 
                    grp_bf_inv_fu_132_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_bf_inv_fu_132_ap_ready = ap_const_logic_1)) then 
                    grp_bf_inv_fu_132_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_bf_mult_1_fu_137_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bf_mult_1_fu_137_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_bf_inv_fu_132_ap_done = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
                    grp_bf_mult_1_fu_137_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_bf_mult_1_fu_137_ap_ready = ap_const_logic_1)) then 
                    grp_bf_mult_1_fu_137_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_bf_mult_2_fu_144_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bf_mult_2_fu_144_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((grp_bf_mult_1_fu_137_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln108_fu_293_p2 = ap_const_lv1_0)))) then 
                    grp_bf_mult_2_fu_144_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_bf_mult_2_fu_144_ap_ready = ap_const_logic_1)) then 
                    grp_bf_mult_2_fu_144_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_bf_mult_fu_160_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bf_mult_fu_160_ap_start_reg <= ap_const_logic_0;
            else
                if (((grp_bf_add_1_fu_150_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    grp_bf_mult_fu_160_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_bf_mult_fu_160_ap_ready = ap_const_logic_1)) then 
                    grp_bf_mult_fu_160_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_start_reg <= ap_const_logic_0;
            else
                if (((grp_bf_mult_2_fu_144_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_start_reg <= ap_const_logic_0;
            else
                if (((grp_bf_mult_1_fu_137_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln1019_fu_252_p2 = ap_const_lv1_0) and (icmp_ln101_fu_246_p2 = ap_const_lv1_0) and (or_ln100_fu_234_p2 = ap_const_lv1_0))) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln1019_fu_252_p2 = ap_const_lv1_0) and (icmp_ln101_fu_246_p2 = ap_const_lv1_0) and (or_ln100_fu_234_p2 = ap_const_lv1_0))) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_start_reg <= ap_const_logic_0;
            else
                if (((grp_bf_mult_1_fu_137_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_ready = ap_const_logic_1)) then 
                    grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    x1_3_reg_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln108_fu_293_p2 = ap_const_lv1_1))) then 
                x1_3_reg_82 <= select_ln108_fu_297_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln101_fu_246_p2 = ap_const_lv1_1) and (or_ln100_fu_234_p2 = ap_const_lv1_0))) then 
                x1_3_reg_82 <= x2_V_read;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (or_ln100_fu_234_p2 = ap_const_lv1_1))) then 
                x1_3_reg_82 <= x1_V_read;
            elsif (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln108_reg_423 = ap_const_lv1_0) and (icmp_ln1019_reg_397 = ap_const_lv1_1) and (icmp_ln101_reg_393 = ap_const_lv1_0) and (or_ln100_reg_389 = ap_const_lv1_0))) then 
                x1_3_reg_82 <= grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_p_Val2_2_out;
            elsif (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln1019_reg_397 = ap_const_lv1_0) and (icmp_ln101_reg_393 = ap_const_lv1_0) and (or_ln100_reg_389 = ap_const_lv1_0))) then 
                x1_3_reg_82 <= d_V_3_reg_412;
            end if; 
        end if;
    end process;

    y1_2_reg_97_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln108_fu_293_p2 = ap_const_lv1_1))) then 
                y1_2_reg_97 <= ap_const_lv166_lc_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln101_fu_246_p2 = ap_const_lv1_1) and (or_ln100_fu_234_p2 = ap_const_lv1_0))) then 
                y1_2_reg_97 <= y2_V_read;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (or_ln100_fu_234_p2 = ap_const_lv1_1))) then 
                y1_2_reg_97 <= y1_V_read;
            elsif (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln108_reg_423 = ap_const_lv1_0) and (icmp_ln1019_reg_397 = ap_const_lv1_1) and (icmp_ln101_reg_393 = ap_const_lv1_0) and (or_ln100_reg_389 = ap_const_lv1_0))) then 
                y1_2_reg_97 <= grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_p_Val2_4_out;
            elsif (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln1019_reg_397 = ap_const_lv1_0) and (icmp_ln101_reg_393 = ap_const_lv1_0) and (or_ln100_reg_389 = ap_const_lv1_0))) then 
                y1_2_reg_97 <= grp_bf_add_1_fu_150_ap_return;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                a_V_reg_418 <= grp_bf_mult_fu_160_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                call_ret3_reg_435 <= grp_bf_mult_2_fu_534_p_dout0;
                lambda_V_2_reg_440 <= lambda_V_2_fu_308_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                d_V_3_reg_412 <= d_V_3_fu_270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                empty_reg_449 <= empty_fu_317_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln101_fu_246_p2 = ap_const_lv1_0) and (or_ln100_fu_234_p2 = ap_const_lv1_0))) then
                icmp_ln1019_reg_397 <= icmp_ln1019_fu_252_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (or_ln100_fu_234_p2 = ap_const_lv1_0))) then
                icmp_ln101_reg_393 <= icmp_ln101_fu_246_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                icmp_ln108_reg_423 <= icmp_ln108_fu_293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                or_ln100_reg_389 <= or_ln100_fu_234_p2;
                trunc_ln99_reg_384 <= trunc_ln99_fu_218_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_p_Val2_3_out_ap_vld = ap_const_logic_1))) then
                p_Val2_3_loc_fu_38 <= grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_p_Val2_3_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_192 <= grp_bf_inv_fu_529_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state5))) then
                reg_197 <= grp_bf_mult_1_fu_539_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state14))) then
                reg_205 <= grp_bf_mult_2_fu_534_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state11))) then
                reg_211 <= grp_bf_add_1_fu_150_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                trunc_ln120_reg_407 <= trunc_ln120_fu_266_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state14, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state21, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, or_ln100_fu_234_p2, icmp_ln101_fu_246_p2, icmp_ln1019_fu_252_p2, ap_CS_fsm_state8, ap_CS_fsm_state10, icmp_ln108_fu_293_p2, ap_CS_fsm_state13, ap_CS_fsm_state18, grp_bf_inv_fu_132_ap_done, grp_bf_mult_1_fu_137_ap_done, grp_bf_mult_2_fu_144_ap_done, grp_bf_add_1_fu_150_ap_done, grp_bf_mult_fu_160_ap_done, grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_done, grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_done, grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_done, ap_CS_fsm_state12, ap_block_state12_on_subcall_done, ap_CS_fsm_state2, ap_block_state14_on_subcall_done, ap_CS_fsm_state16, ap_CS_fsm_state19, ap_CS_fsm_state22, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln1019_fu_252_p2 = ap_const_lv1_1) and (icmp_ln101_fu_246_p2 = ap_const_lv1_0) and (or_ln100_fu_234_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln1019_fu_252_p2 = ap_const_lv1_0) and (icmp_ln101_fu_246_p2 = ap_const_lv1_0) and (or_ln100_fu_234_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((icmp_ln101_fu_246_p2 = ap_const_lv1_1) or (or_ln100_fu_234_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_bf_inv_fu_132_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((grp_bf_mult_1_fu_137_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((grp_bf_mult_2_fu_144_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((grp_bf_add_1_fu_150_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((grp_bf_add_1_fu_150_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((grp_bf_add_1_fu_150_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((grp_bf_mult_fu_160_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((grp_bf_add_1_fu_150_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln108_fu_293_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state14 => 
                if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((grp_bf_mult_1_fu_137_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((grp_bf_mult_2_fu_144_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if (((grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((grp_bf_mult_1_fu_137_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if (((grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_bf_mult_fu_160_ap_done)
    begin
        if ((grp_bf_mult_fu_160_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state11_blk_assign_proc : process(grp_bf_add_1_fu_150_ap_done)
    begin
        if ((grp_bf_add_1_fu_150_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state12_blk_assign_proc : process(ap_block_state12_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state12_on_subcall_done)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(ap_block_state14_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state14_on_subcall_done)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state15_blk_assign_proc : process(grp_bf_mult_1_fu_137_ap_done)
    begin
        if ((grp_bf_mult_1_fu_137_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state16_blk_assign_proc : process(grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_done)
    begin
        if ((grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state17_blk <= ap_const_logic_0;

    ap_ST_fsm_state18_blk_assign_proc : process(grp_bf_mult_2_fu_534_p_done)
    begin
        if ((grp_bf_mult_2_fu_534_p_done = ap_const_logic_0)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state19_blk_assign_proc : process(grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_done)
    begin
        if ((grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(grp_bf_mult_1_fu_137_ap_done)
    begin
        if ((grp_bf_mult_1_fu_137_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state22_blk_assign_proc : process(grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_done)
    begin
        if ((grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_bf_inv_fu_529_p_done)
    begin
        if ((grp_bf_inv_fu_529_p_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(grp_bf_mult_1_fu_137_ap_done)
    begin
        if ((grp_bf_mult_1_fu_137_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(grp_bf_mult_2_fu_534_p_done)
    begin
        if ((grp_bf_mult_2_fu_534_p_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(grp_bf_add_1_fu_150_ap_done)
    begin
        if ((grp_bf_add_1_fu_150_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(grp_bf_add_1_fu_150_ap_done)
    begin
        if ((grp_bf_add_1_fu_150_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(grp_bf_add_1_fu_150_ap_done)
    begin
        if ((grp_bf_add_1_fu_150_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state12_on_subcall_done_assign_proc : process(grp_bf_add_1_fu_150_ap_done, ap_predicate_op67_call_state12)
    begin
                ap_block_state12_on_subcall_done <= ((ap_predicate_op67_call_state12 = ap_const_boolean_1) and (grp_bf_add_1_fu_150_ap_done = ap_const_logic_0));
    end process;


    ap_block_state14_on_subcall_done_assign_proc : process(grp_bf_inv_fu_529_p_done, grp_bf_mult_2_fu_534_p_done)
    begin
                ap_block_state14_on_subcall_done <= ((grp_bf_mult_2_fu_534_p_done = ap_const_logic_0) or (grp_bf_inv_fu_529_p_done = ap_const_logic_0));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_done, grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_done = ap_const_logic_0) or (grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_done = ap_const_logic_0));
    end process;


    ap_condition_574_assign_proc : process(or_ln100_reg_389, icmp_ln101_reg_393, ap_CS_fsm_state12)
    begin
                ap_condition_574 <= ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln101_reg_393 = ap_const_lv1_0) and (or_ln100_reg_389 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state12, ap_block_state12_on_subcall_done)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_x1_3_phi_fu_85_p10_assign_proc : process(icmp_ln1019_reg_397, d_V_3_reg_412, icmp_ln108_reg_423, grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_p_Val2_2_out, x1_3_reg_82, ap_condition_574)
    begin
        if ((ap_const_boolean_1 = ap_condition_574)) then
            if (((icmp_ln108_reg_423 = ap_const_lv1_0) and (icmp_ln1019_reg_397 = ap_const_lv1_1))) then 
                ap_phi_mux_x1_3_phi_fu_85_p10 <= grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_p_Val2_2_out;
            elsif ((icmp_ln1019_reg_397 = ap_const_lv1_0)) then 
                ap_phi_mux_x1_3_phi_fu_85_p10 <= d_V_3_reg_412;
            else 
                ap_phi_mux_x1_3_phi_fu_85_p10 <= x1_3_reg_82;
            end if;
        else 
            ap_phi_mux_x1_3_phi_fu_85_p10 <= x1_3_reg_82;
        end if; 
    end process;


    ap_phi_mux_y1_2_phi_fu_101_p10_assign_proc : process(grp_bf_add_1_fu_150_ap_return, icmp_ln1019_reg_397, icmp_ln108_reg_423, grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_p_Val2_4_out, y1_2_reg_97, ap_condition_574)
    begin
        if ((ap_const_boolean_1 = ap_condition_574)) then
            if (((icmp_ln108_reg_423 = ap_const_lv1_0) and (icmp_ln1019_reg_397 = ap_const_lv1_1))) then 
                ap_phi_mux_y1_2_phi_fu_101_p10 <= grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_p_Val2_4_out;
            elsif ((icmp_ln1019_reg_397 = ap_const_lv1_0)) then 
                ap_phi_mux_y1_2_phi_fu_101_p10 <= grp_bf_add_1_fu_150_ap_return;
            else 
                ap_phi_mux_y1_2_phi_fu_101_p10 <= y1_2_reg_97;
            end if;
        else 
            ap_phi_mux_y1_2_phi_fu_101_p10 <= y1_2_reg_97;
        end if; 
    end process;


    ap_predicate_op67_call_state12_assign_proc : process(or_ln100_reg_389, icmp_ln101_reg_393, icmp_ln1019_reg_397)
    begin
                ap_predicate_op67_call_state12 <= ((icmp_ln1019_reg_397 = ap_const_lv1_0) and (icmp_ln101_reg_393 = ap_const_lv1_0) and (or_ln100_reg_389 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12, ap_block_state12_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_phi_mux_x1_3_phi_fu_85_p10, ap_CS_fsm_state12, ap_block_state12_on_subcall_done, ap_return_0_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_return_0 <= ap_phi_mux_x1_3_phi_fu_85_p10;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_CS_fsm_state12, ap_block_state12_on_subcall_done, ap_phi_mux_y1_2_phi_fu_101_p10, ap_return_1_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_return_1 <= ap_phi_mux_y1_2_phi_fu_101_p10;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;

    d_V_3_fu_270_p2 <= (grp_bf_add_1_fu_150_ap_return xor ap_const_lv166_lc_2);
    empty_fu_317_p1 <= grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_p_Val2_2_out(163 - 1 downto 0);
    grp_bf_add_1_fu_150_ap_start <= grp_bf_add_1_fu_150_ap_start_reg;

    grp_bf_add_1_fu_150_y_V_read_assign_proc : process(reg_197, reg_211, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, d_V_3_reg_412, ap_CS_fsm_state8, grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_a_V_3_out, ap_CS_fsm_state12, ap_predicate_op67_call_state12)
    begin
        if (((ap_predicate_op67_call_state12 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_bf_add_1_fu_150_y_V_read <= reg_211;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            grp_bf_add_1_fu_150_y_V_read <= d_V_3_reg_412;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_bf_add_1_fu_150_y_V_read <= grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_a_V_3_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_bf_add_1_fu_150_y_V_read <= reg_197;
        else 
            grp_bf_add_1_fu_150_y_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_bf_add_1_fu_150_z_V_read_assign_proc : process(x1_V_read, y1_V_read, reg_205, reg_211, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state8, a_V_reg_418, ap_CS_fsm_state12, ap_predicate_op67_call_state12)
    begin
        if (((ap_predicate_op67_call_state12 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_bf_add_1_fu_150_z_V_read <= y1_V_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_bf_add_1_fu_150_z_V_read <= a_V_reg_418;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_bf_add_1_fu_150_z_V_read <= x1_V_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_bf_add_1_fu_150_z_V_read <= reg_211;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_bf_add_1_fu_150_z_V_read <= reg_205;
        else 
            grp_bf_add_1_fu_150_z_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_bf_inv_fu_132_ap_done <= grp_bf_inv_fu_529_p_done;
    grp_bf_inv_fu_132_ap_ready <= grp_bf_inv_fu_529_p_ready;

    grp_bf_inv_fu_132_x_V_read_assign_proc : process(x2_V_read, ap_CS_fsm_state4, ap_CS_fsm_state14, grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_a_V_3_out)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_bf_inv_fu_132_x_V_read <= x2_V_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_bf_inv_fu_132_x_V_read <= grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_a_V_3_out;
        else 
            grp_bf_inv_fu_132_x_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_bf_inv_fu_529_p_din1 <= grp_bf_inv_fu_132_x_V_read;
    grp_bf_inv_fu_529_p_start <= grp_bf_inv_fu_132_ap_start_reg;
    grp_bf_mult_1_fu_137_ap_done <= grp_bf_mult_1_fu_539_p_done;
    grp_bf_mult_1_fu_137_ap_ready <= grp_bf_mult_1_fu_539_p_ready;

    grp_bf_mult_1_fu_137_y_V_read_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state21, trunc_ln99_reg_384, empty_reg_449, p_Val2_3_loc_fu_38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_bf_mult_1_fu_137_y_V_read <= empty_reg_449;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_bf_mult_1_fu_137_y_V_read <= trunc_ln99_reg_384;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_bf_mult_1_fu_137_y_V_read <= p_Val2_3_loc_fu_38;
        else 
            grp_bf_mult_1_fu_137_y_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_bf_mult_1_fu_137_z_V_read_assign_proc : process(reg_192, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state21, lambda_V_2_reg_440)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_bf_mult_1_fu_137_z_V_read <= lambda_V_2_reg_440;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_bf_mult_1_fu_137_z_V_read <= reg_192;
        else 
            grp_bf_mult_1_fu_137_z_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_bf_mult_1_fu_539_p_din1 <= grp_bf_mult_1_fu_137_z_V_read;
    grp_bf_mult_1_fu_539_p_din2 <= grp_bf_mult_1_fu_137_y_V_read;
    grp_bf_mult_1_fu_539_p_start <= grp_bf_mult_1_fu_137_ap_start_reg;
    grp_bf_mult_2_fu_144_ap_done <= grp_bf_mult_2_fu_534_p_done;
    grp_bf_mult_2_fu_144_ap_ready <= grp_bf_mult_2_fu_534_p_ready;

    grp_bf_mult_2_fu_144_x_V_read_assign_proc : process(x2_V_read, ap_CS_fsm_state14, reg_197, ap_CS_fsm_state6, ap_CS_fsm_state18, grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_p_Val2_1_out)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_bf_mult_2_fu_144_x_V_read <= grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_p_Val2_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_bf_mult_2_fu_144_x_V_read <= x2_V_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_bf_mult_2_fu_144_x_V_read <= reg_197;
        else 
            grp_bf_mult_2_fu_144_x_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_bf_mult_2_fu_534_p_din1 <= grp_bf_mult_2_fu_144_x_V_read;
    grp_bf_mult_2_fu_534_p_start <= grp_bf_mult_2_fu_144_ap_start_reg;
    grp_bf_mult_fu_160_ap_start <= grp_bf_mult_fu_160_ap_start_reg;
    grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_start <= grp_point_add_1_Pipeline_VITIS_LOOP_23_11_fu_176_ap_start_reg;
    grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_start <= grp_point_add_1_Pipeline_VITIS_LOOP_23_12_fu_184_ap_start_reg;
    grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_start <= grp_point_add_1_Pipeline_VITIS_LOOP_23_13_fu_114_ap_start_reg;
    grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_start <= grp_point_add_1_Pipeline_VITIS_LOOP_23_14_fu_123_ap_start_reg;
    grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_start <= grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_ap_start_reg;
    icmp_ln1019_fu_252_p2 <= "1" when (x1_V_read = x2_V_read) else "0";
    icmp_ln101_fu_246_p2 <= "1" when (or_ln101_fu_240_p2 = ap_const_lv166_lc_1) else "0";
    icmp_ln1023_1_fu_228_p2 <= "1" when (y2_V_read = ap_const_lv166_lc_1) else "0";
    icmp_ln1023_fu_222_p2 <= "1" when (x2_V_read = ap_const_lv166_lc_1) else "0";
    icmp_ln108_fu_293_p2 <= "0" when (y1_V_read = y2_V_read) else "1";
    lambda_V_2_fu_308_p2 <= (grp_point_add_1_Pipeline_VITIS_LOOP_23_1_fu_168_p_Val2_1_out xor ap_const_lv166_lc_2);
    or_ln100_fu_234_p2 <= (icmp_ln1023_fu_222_p2 or icmp_ln1023_1_fu_228_p2);
    or_ln101_fu_240_p2 <= (y1_V_read or x1_V_read);
    select_ln108_fu_297_p3 <= 
        ap_const_lv166_lc_1 when (icmp_ln108_fu_293_p2(0) = '1') else 
        x2_V_read;
    trunc_ln120_fu_266_p1 <= grp_bf_mult_1_fu_539_p_dout0(163 - 1 downto 0);
    trunc_ln99_fu_218_p1 <= y2_V_read(163 - 1 downto 0);
end behav;
