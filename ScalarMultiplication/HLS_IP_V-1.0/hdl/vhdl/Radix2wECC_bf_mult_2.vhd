-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Radix2wECC_bf_mult_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_read : IN STD_LOGIC_VECTOR (165 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (165 downto 0) );
end;


architecture behav of Radix2wECC_bf_mult_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv166_lc_1 : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_A3 : STD_LOGIC_VECTOR (7 downto 0) := "10100011";
    constant ap_const_lv166_lc_2 : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_A2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100010";
    constant ap_const_lv163_lc_2 : STD_LOGIC_VECTOR (162 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv163_lc_1 : STD_LOGIC_VECTOR (162 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_79 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln36_fu_84_p1 : STD_LOGIC_VECTOR (162 downto 0);
    signal trunc_ln36_reg_234 : STD_LOGIC_VECTOR (162 downto 0);
    signal tmp_V_3_fu_129_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal tmp_V_3_reg_245 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln46_fu_123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_136_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_250 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_254 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_start : STD_LOGIC;
    signal grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_done : STD_LOGIC;
    signal grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_idle : STD_LOGIC;
    signal grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_ready : STD_LOGIC;
    signal grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_tmp_V_6_out_o : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_tmp_V_6_out_o_ap_vld : STD_LOGIC;
    signal grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_start : STD_LOGIC;
    signal grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_done : STD_LOGIC;
    signal grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_idle : STD_LOGIC;
    signal grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_ready : STD_LOGIC;
    signal grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_p_Val2_22_out : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_p_Val2_22_out_ap_vld : STD_LOGIC;
    signal grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_start_reg : STD_LOGIC := '0';
    signal tmp_V_1_in_in_fu_36 : STD_LOGIC_VECTOR (165 downto 0);
    signal grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal br_fu_40 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln46_fu_189_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_V_1_fu_44 : STD_LOGIC_VECTOR (165 downto 0);
    signal tmp_V_fu_92_p3 : STD_LOGIC_VECTOR (165 downto 0);
    signal z_V_write_assign_fu_48 : STD_LOGIC_VECTOR (165 downto 0);
    signal trunc_ln36_1_fu_88_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln780_fu_152_p1 : STD_LOGIC_VECTOR (162 downto 0);
    signal shl_ln780_fu_155_p2 : STD_LOGIC_VECTOR (162 downto 0);
    signal and_ln780_fu_161_p2 : STD_LOGIC_VECTOR (162 downto 0);
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Radix2wECC_bf_mult_2_Pipeline_VITIS_LOOP_23_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_V_5 : IN STD_LOGIC_VECTOR (165 downto 0);
        tmp_V_6_out_i : IN STD_LOGIC_VECTOR (165 downto 0);
        tmp_V_6_out_o : OUT STD_LOGIC_VECTOR (165 downto 0);
        tmp_V_6_out_o_ap_vld : OUT STD_LOGIC );
    end component;


    component Radix2wECC_bf_mult_2_Pipeline_VITIS_LOOP_23_114 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        empty : IN STD_LOGIC_VECTOR (165 downto 0);
        tmp_V_7 : IN STD_LOGIC_VECTOR (165 downto 0);
        p_Val2_22_out : OUT STD_LOGIC_VECTOR (165 downto 0);
        p_Val2_22_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62 : component Radix2wECC_bf_mult_2_Pipeline_VITIS_LOOP_23_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_start,
        ap_done => grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_done,
        ap_idle => grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_idle,
        ap_ready => grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_ready,
        tmp_V_5 => tmp_V_3_reg_245,
        tmp_V_6_out_i => tmp_V_1_in_in_fu_36,
        tmp_V_6_out_o => grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_tmp_V_6_out_o,
        tmp_V_6_out_o_ap_vld => grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_tmp_V_6_out_o_ap_vld);

    grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68 : component Radix2wECC_bf_mult_2_Pipeline_VITIS_LOOP_23_114
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_start,
        ap_done => grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_done,
        ap_idle => grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_idle,
        ap_ready => grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_ready,
        empty => tmp_V_1_fu_44,
        tmp_V_7 => reg_79,
        p_Val2_22_out => grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_p_Val2_22_out,
        p_Val2_22_out_ap_vld => grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_p_Val2_22_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_ready = ap_const_logic_1)) then 
                    grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_fu_136_p3 = ap_const_lv1_1) and (icmp_ln46_fu_123_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_ready = ap_const_logic_1)) then 
                    grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    br_fu_40_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                br_fu_40 <= ap_const_lv8_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                br_fu_40 <= add_ln46_fu_189_p2;
            end if; 
        end if;
    end process;

    tmp_V_1_fu_44_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_V_1_fu_44 <= tmp_V_fu_92_p3;
            elsif (((p_Result_s_reg_254 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                tmp_V_1_fu_44 <= grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_p_Val2_22_out;
            end if; 
        end if;
    end process;

    tmp_V_1_in_in_fu_36_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_V_1_in_in_fu_36 <= x_V_read;
            elsif (((tmp_fu_136_p3 = ap_const_lv1_0) and (icmp_ln46_fu_123_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                tmp_V_1_in_in_fu_36 <= tmp_V_3_fu_129_p2;
            elsif (((grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_tmp_V_6_out_o_ap_vld = ap_const_logic_1) and (tmp_reg_250 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                tmp_V_1_in_in_fu_36 <= grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_tmp_V_6_out_o;
            end if; 
        end if;
    end process;

    z_V_write_assign_fu_48_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                z_V_write_assign_fu_48 <= tmp_V_fu_92_p3;
            elsif (((p_Result_s_reg_254 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                z_V_write_assign_fu_48 <= grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_p_Val2_22_out;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                p_Result_s_reg_254 <= p_Result_s_fu_166_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2))) then
                reg_79 <= tmp_V_1_in_in_fu_36;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln46_fu_123_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    tmp_V_3_reg_245(165 downto 1) <= tmp_V_3_fu_129_p2(165 downto 1);
                tmp_reg_250 <= reg_79(162 downto 162);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                trunc_ln36_reg_234 <= trunc_ln36_fu_84_p1;
            end if;
        end if;
    end process;
    tmp_V_3_reg_245(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln46_fu_123_p2, p_Result_s_fu_166_p2, ap_CS_fsm_state4, grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_done, ap_CS_fsm_state6, ap_block_state4_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln46_fu_123_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((p_Result_s_fu_166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif (((p_Result_s_fu_166_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln46_fu_189_p2 <= std_logic_vector(unsigned(br_fu_40) + unsigned(ap_const_lv8_1));
    and_ln780_fu_161_p2 <= (trunc_ln36_reg_234 and shl_ln780_fu_155_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state4_on_subcall_done)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_done)
    begin
        if ((grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_block_state4_on_subcall_done_assign_proc : process(tmp_reg_250, grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_done = ap_const_logic_0) and (tmp_reg_250 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln46_fu_123_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((icmp_ln46_fu_123_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, icmp_ln46_fu_123_p2)
    begin
        if (((icmp_ln46_fu_123_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= z_V_write_assign_fu_48;
    grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_start <= grp_bf_mult_2_Pipeline_VITIS_LOOP_23_114_fu_68_ap_start_reg;
    grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_start <= grp_bf_mult_2_Pipeline_VITIS_LOOP_23_1_fu_62_ap_start_reg;
    icmp_ln46_fu_123_p2 <= "1" when (br_fu_40 = ap_const_lv8_A3) else "0";
    p_Result_s_fu_166_p2 <= "1" when (and_ln780_fu_161_p2 = ap_const_lv163_lc_1) else "0";
    shl_ln780_fu_155_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv163_lc_2),to_integer(unsigned('0' & zext_ln780_fu_152_p1(31-1 downto 0)))));
    tmp_V_3_fu_129_p2 <= std_logic_vector(shift_left(unsigned(reg_79),to_integer(unsigned('0' & ap_const_lv166_lc_2(31-1 downto 0)))));
    tmp_V_fu_92_p3 <= 
        x_V_read when (trunc_ln36_1_fu_88_p1(0) = '1') else 
        ap_const_lv166_lc_1;
    tmp_fu_136_p3 <= reg_79(162 downto 162);
    trunc_ln36_1_fu_88_p1 <= x_V_read(1 - 1 downto 0);
    trunc_ln36_fu_84_p1 <= x_V_read(163 - 1 downto 0);
    zext_ln780_fu_152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(br_fu_40),163));
end behav;
